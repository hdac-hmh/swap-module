syntax = "proto3";
package hdachmh.swapmodule.mintservice;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "mintservice/Token.proto";

option go_package = "github.com/hdac-hmh/swap-module/x/mintservice/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2
	rpc Token(QueryGetTokenRequest) returns (QueryGetTokenResponse) {
		option (google.api.http).get = "/hdac-hmh/swapmodule/mintservice/Token/{id}";
	}
	rpc TokenAll(QueryAllTokenRequest) returns (QueryAllTokenResponse) {
		option (google.api.http).get = "/hdac-hmh/swapmodule/mintservice/Token";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetTokenRequest {
	uint64 id = 1;
}

message QueryGetTokenResponse {
	Token Token = 1;
}

message QueryAllTokenRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTokenResponse {
	repeated Token Token = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
