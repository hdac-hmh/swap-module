syntax = "proto3";
package hdachmh.swapmodule.tokenswap;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/hdac-hmh/swap-module/x/tokenswap/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc CreateToken(MsgCreateToken) returns (MsgCreateTokenResponse);
  rpc UpdateToken(MsgUpdateToken) returns (MsgUpdateTokenResponse);
  rpc DeleteToken(MsgDeleteToken) returns (MsgDeleteTokenResponse);
  rpc CreateSwapRequest(MsgCreateSwapRequest) returns (MsgCreateSwapRequestResponse);
  rpc UpdateSwapRequest(MsgUpdateSwapRequest) returns (MsgUpdateSwapRequestResponse);
  rpc DeleteSwapRequest(MsgDeleteSwapRequest) returns (MsgDeleteSwapRequestResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgCreateToken {
  string creator = 1;
  string address = 2;
  int32 coin = 3;
}

message MsgCreateTokenResponse {
  uint64 id = 1;
}

message MsgUpdateToken {
  string creator = 1;
  uint64 id = 2;
  string address = 3;
  int32 coin = 4;
}

message MsgUpdateTokenResponse { }

message MsgDeleteToken {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteTokenResponse { }

message MsgCreateSwapRequest {
  string creator = 1;
  string burnTxHash = 2;
  string ethereumSender = 3;
  string receiver = 4;
  string amountEng = 5;
  string signerAddr = 6;
}

message MsgCreateSwapRequestResponse {
  uint64 id = 1;
}

message MsgUpdateSwapRequest {
  string creator = 1;
  uint64 id = 2;
  string burnTxHash = 3;
  string ethereumSender = 4;
  string receiver = 5;
  string amountEng = 6;
  string signerAddr = 7;
}

message MsgUpdateSwapRequestResponse { }

message MsgDeleteSwapRequest {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteSwapRequestResponse { }
